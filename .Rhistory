collect()
View(toplt)
View(toplt)
g2plt <- toplt %>%
mutate(sigcond = case_when(
FDR > 0.05 ~ "n.s.",
abs(logFC) < 1 ~ "sig-only",
logFC > 1 ~ "Over-expressed",
logFC < -1 ~ "Under-expressed"
)) %>%
dplyr::filter(sigcond %in% c("Over-expressed", "Under-expressed")) %>%
group_by(sigcond) %>%
slice_min(order_by = logFC, n = 12) %>%
pull(gene_name)
h_obj <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]])
norm_table <- paste0(study, "_", tolower(norm))
h_obj <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]])
h_obj <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
select(gene_name, contains("SRR"))
h_obj <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
select(gene_name, contains("SRR")) %>%
collect()
h_obj <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]])
h_obj <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% g2plt)
h_obj <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]])
g2plt <- toplt %>%
mutate(sigcond = case_when(
FDR > 0.05 ~ "n.s.",
abs(logFC) < 1 ~ "sig-only",
logFC > 1 ~ "Over-expressed",
logFC < -1 ~ "Under-expressed"
)) %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
filter(sigcond %in% c("Over-expressed", "Under-expressed")) %>%
group_by(sigcond) %>%
slice_min(order_by = logFC, n = 12) %>%
pull(gene_name)
h_obj <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
) %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% g2plt)
}
h_obj <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% g2plt)
h_obj <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% g2plt)
h_obj <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% g2plt)
annot <- topvt %>%
dplyr::select(sample_id, condition) %>%
unique() %>%
column_to_rownames("sample_id")
annot <- h_obj %>%
dplyr::select(sample_id, condition) %>%
unique() %>%
column_to_rownames("sample_id")
mat <- pivot_wider(
data = topvt,
id_cols = gene_name, names_from = sample_id, values_from = counts
) %>%
column_to_rownames("gene_name") %>%
as.matrix()
mat <- pivot_wider(
data = h_obj,
id_cols = gene_name, names_from = sample_id, values_from = value
) %>%
column_to_rownames("gene_name") %>%
as.matrix()
View(annot)
ann_colors <- c("red", "blue")
names(ann_colors) <- annot %>% pull(condition) %>% unique()
ann_colors <- list(condition = ann_colors)
plt <- pheatmap(mat,
scale = "row",
angle_col = "45",
annotation_col = annot,
annotation_colors = ann_colors,
name = norm,
main = plot_title
)
pheatmap(mat,
scale = "row",
angle_col = "45",
annotation_col = annot,
annotation_colors = ann_colors,
name = norm,
main = plot_title
)
View(mat)
sum(is.infinite(mat))
mat <- pivot_wider(
data = topvt,
id_cols = gene_name, names_from = sample_id, values_from = counts
) %>%
column_to_rownames("gene_name") %>%
mutate_all(~ ifelse(all(. == .[1]), jitter(., factor = 1e-6), .))%>%
as.matrix()
mat <- pivot_wider(
data = h_obj,
id_cols = gene_name, names_from = sample_id, values_from = counts
) %>%
column_to_rownames("gene_name") %>%
mutate_all(~ ifelse(all(. == .[1]), jitter(., factor = 1e-6), .))%>%
as.matrix()
mat <- pivot_wider(
data = h_obj,
id_cols = gene_name, names_from = sample_id, values_from = counts
) %>%
column_to_rownames("gene_name") %>%
as.matrix()
mat <- pivot_wider(
data = h_obj,
id_cols = gene_name, names_from = sample_id, values_from = value
) %>%
column_to_rownames("gene_name") %>%
as.matrix()
table1 <- tbl(conn, deg_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>% collect()
View(table1)
plotted_genes <- table1 %>%
mutate(sigcond = case_when(
FDR > 0.05 ~ "n.s.",
abs(logFC) < 1 ~ "sig-only",
logFC > 1 ~ "Over-expressed",
logFC < -1 ~ "Under-expressed"
)) %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
filter(sigcond %in% c("Over-expressed", "Under-expressed")) %>%
group_by(sigcond) %>%
slice_min(order_by = logFC, n = 12) %>%
pull(gene_name)
deg_table <- paste0(study,"_","degs")
norm_table <- paste0(study, "_", tolower(norm))
pair <- strsplit(contrast, " vs. ")[[1]]
table1 <- tbl(conn, deg_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>% collect()
table1 <- tbl(conn, deg_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>% collect()
plotted_genes <- table1 %>%
mutate(sigcond = case_when(
FDR > 0.05 ~ "n.s.",
abs(logFC) < 1 ~ "sig-only",
logFC > 1 ~ "Over-expressed",
logFC < -1 ~ "Under-expressed"
)) %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
filter(sigcond %in% c("Over-expressed", "Under-expressed")) %>%
group_by(sigcond) %>%
slice_min(order_by = logFC, n = 12) %>%
pull(gene_name)
plotted_genes <- tbl(conn, deg_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
mutate(sigcond = case_when(
FDR > 0.05 ~ "n.s.",
abs(logFC) < 1 ~ "sig-only",
logFC > 1 ~ "Over-expressed",
logFC < -1 ~ "Under-expressed"
)) %>% collect() %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
filter(sigcond %in% c("Over-expressed", "Under-expressed")) %>%
group_by(sigcond) %>%
slice_min(order_by = logFC, n = 12) %>%
pull(gene_name)
plotted_genes <- tbl(conn, deg_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
mutate(sigcond = case_when(
FDR > 0.05 ~ "n.s.",
abs(logFC) < 1 ~ "sig-only",
logFC > 1 ~ "Over-expressed",
logFC < -1 ~ "Under-expressed"
)) %>% collect() %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
filter(sigcond %in% c("Over-expressed", "Under-expressed")) %>%
group_by(sigcond) %>%
slice_min(order_by = logFC, n = 20) %>%
pull(gene_name)
plotted_genes
plotted_genes <- tbl(conn, deg_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
mutate(sigcond = case_when(
FDR > 0.05 ~ "n.s.",
abs(logFC) < 1 ~ "sig-only",
logFC > 1 ~ "Over-expressed",
logFC < -1 ~ "Under-expressed"
)) %>% collect() %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
filter(sigcond %in% c("Over-expressed", "Under-expressed")) %>%
group_by(sigcond) %>%
slice_min(order_by = logFC, n = 12) %>%
pull(gene_name)
plotted_genes
mat <- pivot_wider(
data = h_obj,
id_cols = gene_name, names_from = sample_id, values_from = value
) %>%
column_to_rownames("gene_name") %>%
as.matrix()
h_obj <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% plotted_genes)
View(h_obj)
View(h_obj)
values_table <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% plotted_genes)
annot <- values_table %>%
dplyr::select(sample_id, condition) %>%
unique() %>%
column_to_rownames("sample_id")
mat <- pivot_wider(
data = values_table,
id_cols = gene_name, names_from = sample_id, values_from = value
) %>%
column_to_rownames("gene_name") %>%
as.matrix()
#plot
ann_colors <- c("red", "blue")
names(ann_colors) <- annot %>% pull(condition) %>% unique()
ann_colors <- list(condition = ann_colors)
plot_title <- paste0(pair[1], " vs. ", pair[2])
plt <- pheatmap(mat,
scale = "row",
angle_col = "45",
annotation_col = annot,
annotation_colors = ann_colors,
name = norm,
main = plot_title
)
pheatmap(mat,
scale = "row",
angle_col = "45",
annotation_col = annot,
annotation_colors = ann_colors,
name = norm,
main = plot_title
)
mat <- pivot_wider(
data = values_table,
id_cols = gene_name, names_from = sample_id, values_from = value
) %>%  distinct() %>%
column_to_rownames("gene_name") %>%
as.matrix()
plotted_genes <- tbl(conn, deg_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
mutate(sigcond = case_when(
FDR > 0.05 ~ "n.s.",
abs(logFC) < 1 ~ "sig-only",
logFC > 1 ~ "Over-expressed",
logFC < -1 ~ "Under-expressed"
)) %>%
collect() %>%
filter(sigcond %in% c("Over-expressed", "Under-expressed")) %>%
group_by(sigcond) %>%
slice_min(order_by = logFC, n = 12) %>%
pull(gene_name)
values_table <- tbl(conn,norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% plotted_genes)
View(values_table)
values_table <- tbl(conn, norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% plotted_genes)
values_table <- tbl(conn, norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% plotted_genes)
values_table <- tbl(conn, norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
mutate(gene_name = case_when(
is.na(gene_name) ~ gene_id,
TRUE ~ gene_name
)) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% plotted_genes)
values_table <- tbl(conn, norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
select(gene_name, contains("SRR")) %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% plotted_genes)
values_table <- tbl(conn, norm_table) %>%
left_join(tbl(conn, "ens2sym"), by = "gene_id") %>%
collect() %>%
pivot_longer(contains("SRR")) %>%
rename(sample_id = name) %>%
left_join(
tbl(conn, "metadata") %>% select(sample_id, condition) %>% collect(),
by = "sample_id"
) %>%
filter(condition == pair[[1]] | condition == pair[[2]]) %>%
filter(gene_name %in% plotted_genes)
annot <- values_table %>%
dplyr::select(sample_id, condition) %>%
unique() %>%
column_to_rownames("sample_id")
View(annot)
mat <- pivot_wider(
data = values_table,
id_cols = gene_name, names_from = sample_id, values_from = value
) %>%
column_to_rownames("gene_name") %>%
as.matrix()
pheatmap(mat,
scale = "row",
angle_col = "45",
annotation_col = annot,
annotation_colors = ann_colors,
name = norm,
main = plot_title
)
shiny::runApp()
shiny::runApp()
